(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8177],{62197:function(__unused_webpack_module,__unused_webpack_exports,__webpack_require__){(window.__NEXT_P=window.__NEXT_P||[]).push(["/rewards",function(){return __webpack_require__(73220)}])},73220:function(__unused_webpack_module,__webpack_exports__,__webpack_require__){"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return rewards}});var jsx_runtime=__webpack_require__(85893),SWNFTUpgrade_namespaceObject=JSON.parse('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"version","type":"uint8"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"bytes","name":"pubKey","type":"bytes"}],"name":"LogAddSuperWhiteList","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"bytes","name":"pubKey","type":"bytes"}],"name":"LogAddWhiteList","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LogDeposit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LogEnterStrategy","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"strategy","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LogExitStrategy","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"LogSetFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"feePool","type":"address"}],"name":"LogSetFeePool","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"bytes","name":"pubKey","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"rate","type":"uint256"}],"name":"LogSetRate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"swETHAddress","type":"address"}],"name":"LogSetSWETHAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"uint256","name":"itemId","type":"uint256"},{"indexed":true,"internalType":"bytes","name":"pubKey","type":"bytes"},{"indexed":false,"internalType":"uint256","name":"deposit","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"timeStamp","type":"uint256"},{"indexed":false,"internalType":"string","name":"referral","type":"string"}],"name":"LogStake","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_address","type":"address"}],"name":"LogUpdateBotAddress","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"bytes","name":"pubKey","type":"bytes"},{"indexed":false,"internalType":"bool","name":"isActive","type":"bool"}],"name":"LogUpdateIsValidatorActive","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"LogWithdraw","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Paused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"account","type":"address"}],"name":"Unpaused","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"ETHER","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"GWEI","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"pubKey","type":"bytes"}],"name":"addSuperWhiteList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"pubKeys","type":"bytes[]"}],"name":"addSuperWhiteLists","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"pubKey","type":"bytes"}],"name":"addWhiteList","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"pubKeys","type":"bytes[]"}],"name":"addWhiteLists","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"action","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"strategy","type":"address"}],"internalType":"struct ISWNFT.Action[]","name":"actions","type":"tuple[]"}],"name":"batchAction","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"botAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"deposit","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositContract","outputs":[{"internalType":"contract IDepositContract","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"enterStrategy","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"strategy","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"exitStrategy","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feePool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getWithdrawalCredentials","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_swellAddress","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"isValidatorActive","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"opRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"paused","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"positions","outputs":[{"internalType":"bytes","name":"pubKey","type":"bytes"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"baseTokenBalance","type":"uint256"},{"internalType":"uint256","name":"timeStamp","type":"uint256"},{"internalType":"bool","name":"operator","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fee","type":"uint256"}],"name":"setFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_feePool","type":"address"}],"name":"setFeePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"pubKey","type":"bytes"},{"internalType":"uint256","name":"rate","type":"uint256"}],"name":"setRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_vaultManager","type":"address"}],"name":"setVaultManagerAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_swETHAddress","type":"address"}],"name":"setswETHAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"pubKey","type":"bytes"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"bytes32","name":"depositDataRoot","type":"bytes32"},{"internalType":"uint256","name":"amount","type":"uint256"}],"internalType":"struct ISWNFT.Stake[]","name":"stakes","type":"tuple[]"},{"internalType":"string","name":"referral","type":"string"}],"name":"stake","outputs":[{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"stakedPositions","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"superWhiteList","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swETHAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swETHSymbolOld","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"swellAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tokenIds","outputs":[{"internalType":"uint256","name":"_value","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unpause","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"unstake","outputs":[],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_address","type":"address"}],"name":"updateBotAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"pubKey","type":"bytes"}],"name":"updateIsValidatorActive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes","name":"pubKey","type":"bytes"},{"internalType":"uint256","name":"rate","type":"uint256"}],"name":"updateIsValidatorActiveAndSetRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"pubKeys","type":"bytes[]"}],"name":"updateIsValidatorsActive","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"name":"upgradeTo","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"validatorDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"validators","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"validatorsLength","outputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vaultManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"","type":"bytes"}],"name":"whiteList","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[{"internalType":"bool","name":"success","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]'),SWETH_namespaceObject=JSON.parse('[{"inputs":[{"internalType":"address","name":"_minter","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"minter","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]'),dist=__webpack_require__(69077),web3_provider=__webpack_require__(241),lib_esm=__webpack_require__(64146),react=__webpack_require__(67294),axios=__webpack_require__(9669),axios_default=__webpack_require__.n(axios),lib=__webpack_require__(17283);(0,lib.Ps)("\n  query AllNodeOperators {\n    allNodeOperators {\n      id\n      status\n      validators {\n        id\n        status\n        pubKey\n        depositDatas {\n          amount\n        }\n        depositBalance\n      }\n      location\n      nodes\n      cpu\n      ram\n      executionLayerClients\n      consensusLayerClients\n      network\n      storage\n      category\n      name\n      yearsOfExperience\n      email\n      website\n      social\n      description\n      verified\n      logo\n      rate\n    }\n  }\n"),(0,lib.Ps)("\n  query AllUsers {\n    allUsers {\n      id\n      role\n      wallet\n      nodeOperator {\n        id\n        location\n        nodes\n        cpu\n        ram\n        executionLayerClients\n        consensusLayerClients\n        network\n        storage\n        category\n        name\n        yearsOfExperience\n        email\n        website\n        social\n        description\n      }\n    }\n  }\n"),(0,lib.Ps)("\n query GetUserByWallet($wallet: String!) {\n  getUserByWallet(userUniqueInput: { wallet: $wallet }) {\n      id\n      wallet\n      role\n      referralCode\n    }\n  }\n"),(0,lib.Ps)("\n query GetUsersByReferralCodes($referralCodes: [String]!) {\n  getUsersByReferralCodes(referralCodes: $referralCodes) {\n      wallet\n      referralCode\n    }\n  }\n"),(0,lib.Ps)("\n  query NodeOperatorByUser($wallet: String!) {\n    nodeOperatorByUser(userUniqueInput: { wallet: $wallet }) {\n      id\n      location\n      nodes\n      cpu\n      ram\n      executionLayerClients\n      consensusLayerClients\n      network\n      storage\n      category\n      name\n      yearsOfExperience\n      email\n      website\n      social\n      description\n      status\n      rate\n      logo\n    }\n  }\n"),(0,lib.Ps)("\n  query NodeOperatorByUser($wallet: String!) {\n    nodeOperatorByUser(userUniqueInput: { wallet: $wallet }) {\n      id\n      validators {\n        id\n        status\n        pubKey\n      }\n    }\n  }\n"),(0,lib.Ps)("\n  mutation createOrUpdateUser($createOrUpdateUserInput: CreateOrUpdateUserInput!, $userSignatureInput: UserSignatureInput!) {\n    createOrUpdateUser(data: $createOrUpdateUserInput, userSignatureInput: $userSignatureInput) {\n      id\n      role\n      wallet\n      referralCode\n    }\n  }\n"),(0,lib.Ps)("\n  mutation CreateNodeOperator($userNodeOperatorCreateInput: UserNodeOperatorCreateInput!, $userSignatureInput: UserSignatureInput!) {\n    createNodeOperator(data: $userNodeOperatorCreateInput, userSignatureInput: $userSignatureInput) {\n      id\n      role\n      wallet\n      referralCode\n      nodeOperator {\n        id\n        location\n        nodes\n        cpu\n        ram\n        executionLayerClients\n        consensusLayerClients\n        network\n        storage\n        category\n        name\n        yearsOfExperience\n        email\n        website\n        social\n        description\n        logo\n      }\n    }\n  }\n"),(0,lib.Ps)("\n  query ValidatorsByNodeOperator($id: Int!) {\n    validatorsByNodeOperator(nodeOperatorUniqueInput: { id: $id }) {\n      id\n      pubKey\n      depositDatas {\n        amount\n        signature\n        depositDataRoot\n      }\n    }\n  }\n"),(0,lib.Ps)("\n  query DepositDatasByValidator($pubKey: String!, $amount: String!) {\n    depositDatasByValidator(validatorUniqueInput: { pubKey: $pubKey }, amount: $amount) {\n      id\n      signature\n      amount\n      depositDataRoot\n    }\n  }\n"),(0,lib.Ps)("\n  mutation createDepositDataByValidatorFromJson(\n    $nodeOperatorUniqueInput: NodeOperatorUniqueInput!\n    $depositDataCreateWithJsonInput: DepositDataCreateWithJsonInput!\n    $userSignatureInput: UserSignatureInput!\n  ) {\n    createDepositDataByValidatorFromJson(\n      nodeOperatorUniqueInput: $nodeOperatorUniqueInput\n      depositDataCreateWithJsonInput: $depositDataCreateWithJsonInput\n      userSignatureInput: $userSignatureInput\n    ) {\n      id\n      pubKey\n      depositDatas {\n        id\n        amount\n        signature\n        depositDataRoot\n      }\n    }\n  }\n"),(0,lib.Ps)("\n  query DepositDatasByNodeOperator($id: Int!, $amount: String) {\n    depositDatasByNodeOperator(nodeOperatorUniqueInput: { id: $id }, amount: $amount) {\n      id\n      signature\n      amount\n      depositDataRoot\n      validator {\n        pubKey\n      }\n    }\n  }\n"),(0,lib.Ps)("\n  mutation NonceByUser($userUniqueInput: UserUniqueInput!) {\n    nonceByUser(data: $userUniqueInput) {\n      wallet\n      nonce\n      timestamp\n    }\n  }\n"),(0,lib.Ps)("\n  query StakeAmountByNodeOperator($id: Int!) {\n    stakeAmountByNodeOperator(nodeOperatorUniqueInput: { id: $id }) {\n      amount\n    }\n  }\n"),(0,lib.Ps)("\n    mutation ReferralByUser($referralCreateInput: ReferralCreateInput!, $userSignatureInput: UserSignatureInput!){\n        referralByUser(data: $referralCreateInput, userSignatureInput: $userSignatureInput) {\n            id\n            discordId\n            wallet\n        }\n    }\n");let GET_NODE_OPERATOR_BY_VALIDATOR=(0,lib.Ps)("\n  query NodeOperatorByValidator($pubKey: String!) {\n    nodeOperatorByValidator(validatorUniqueInput: { pubKey: $pubKey }) {\n    name\n    network\n    nodes\n    website\n    social\n    email\n    location\n    category\n    executionLayerClients\n    consensusLayerClients\n    yearsOfExperience\n    cpu\n    ram\n    storage\n    status\n    description\n    rate\n    verified\n    id\n    logo\n    }\n  }\n");(0,lib.Ps)("\n  mutation UploadFile($file: Upload!) {\n    uploadFile(file: $file)\n  }\n"),(0,lib.Ps)("\n  query isTakenReferalCode($referralCode: String!) {\n    isTakenReferalCode(referralCode: $referralCode) {\n      status\n    }\n  }\n");var useLazyQuery=__webpack_require__(55859),next_link=__webpack_require__(41664),link_default=__webpack_require__.n(next_link),chunk_GH36UIKI=__webpack_require__(78108),Buffer=__webpack_require__(48764).Buffer;let Account=()=>{let[metaArray,setMetaArray]=(0,react.useState)([]),[valiArray,setValiArray]=(0,react.useState)([]),[pubKeysArray,setpubKeysArray]=(0,react.useState)([]),[apeMode,setapeMode]=(0,react.useState)(!1),[isLoaded,setIsLoaded]=(0,react.useState)(!1),[showChild,setShowChild]=(0,react.useState)(!1),{address,isConnected}=(0,dist.mA)(),{chain}=(0,dist.LN)(),{openConnectModal}=(0,chunk_GH36UIKI.We)(),beaconchain=(null==chain?void 0:chain.name)==="Mainnet"?"https://beaconcha.in/validator/":"https://goerli.beaconcha.in/validator/",[getValidator,{loading:valiLoading,error:valiError,data:valiData}]=(0,useLazyQuery.t)(GET_NODE_OPERATOR_BY_VALIDATOR,{}),contractAddr=(null==chain?void 0:chain.name)==="Goerli"?"0x23e33FC2704Bb332C0410B006e8016E7B99CF70A":(null==chain?void 0:chain.name)==="Mainnet"?"0xe0C8df4270F4342132ec333F6048cb703E7A9c77":"0x0000000000000000000000000000000000000000";(null==chain?void 0:chain.name)==="Goerli"||null==chain||chain.name;let{config:configWithdraw,error:prepareWithdrawError,isError:isPrepareWithdrawError,isSuccess:prepareWithdrawSuccess}=(0,dist.PJ)({addressOrName:contractAddr,contractInterface:SWNFTUpgrade_namespaceObject,functionName:"withdraw",args:["tokenid","amount"]}),{data:resultWithdraw,isLoading:writeWithdrawisLoading,error:writeErrorWithdraw,write:writeWithdraw}=(0,dist.GG)(configWithdraw),{config:configDeposit,error:prepareDepositError,isError:isPrepareDepositError,isSuccess:prepareDepositSuccess}=(0,dist.PJ)({addressOrName:contractAddr,contractInterface:SWNFTUpgrade_namespaceObject,functionName:"deposit",args:["tokenid","amount"]}),{data:resultDeposit,isLoading:writeDepositisLoading,error:writeErrorDeposit,write:writeDeposit}=(0,dist.GG)(configDeposit),{config:configApprove,error:prepareApproveError,isError:isPrepareApproveError,isSuccess:prepareApproveSuccess}=(0,dist.PJ)({addressOrName:contractAddr,contractInterface:SWETH_namespaceObject,functionName:"approve",args:[contractAddr,"amount"]}),{data:resultApprove,write:writeApprove}=(0,dist.GG)(configApprove),getNFT=(0,react.useCallback)(async()=>{let tokenID=[],res=await axios_default().get("https://api-goerli.etherscan.io/api?module=account&action=tokennfttx&address=".concat(address,"&contractAddress=").concat(contractAddr,"&startblock=5000&endblock=latest&sort=asc&apikey=KUDEE9ZTSCPEGMQE5PK8YN7TIA1ZDM7U9B"));return await res.data.result.map(item=>{tokenID.push(item.tokenID)}),tokenID},[]),getMeta=(0,react.useCallback)(async tokenID=>{let provider=new web3_provider.Q(window.ethereum),swNFT=new lib_esm.CH(contractAddr,SWNFTUpgrade_namespaceObject,provider),meta=[],pubKeys=[],i=0;for(;i<(null==tokenID?void 0:tokenID.length);){let res=await swNFT.tokenURI(tokenID[i]),decoded=Buffer.from(await res.split("data:application/json;base64,")[1],"base64").toString("utf8");await meta.push(await JSON.parse(decoded)),await pubKeys.push("0x"+String(await JSON.parse(decoded).name).split(" 0x")[1].split(" <>")[0]),i++}return[await meta,await pubKeys]},[]),getVali=(0,react.useCallback)(async pubKeys=>{let vali=[],i=0;for(;i<(null==pubKeys?void 0:pubKeys.length);){let valiData=await getValidator({variables:{pubKey:String(pubKeys[i])}});vali.push(valiData.data.nodeOperatorByValidator),i++}return vali},[]);if((0,react.useEffect)(()=>{isConnected?getNFT().then(tokenID=>{getMeta(tokenID).then(param=>{let[meta,pubKeys]=param;setMetaArray(meta),setpubKeysArray(pubKeys),getVali(pubKeys).then(res=>{setValiArray(res),setIsLoaded(!0)})}),setShowChild(!0)}):(setIsLoaded(!0),setShowChild(!0))},[getNFT,getMeta,getVali]),!showChild)return null;if(void 0!=window.ethereum){var _ethereum,ref,_ethereum1,ref1;null===(ref=(_ethereum=window.ethereum).on)||void 0===ref||ref.call(_ethereum,"accountsChanged",function(){window.location.reload()}),null===(ref1=(_ethereum1=window.ethereum).on)||void 0===ref1||ref1.call(_ethereum1,"chainChanged",function(){window.location.reload()})}return(0,jsx_runtime.jsx)("main",{className:"min-h-screen",children:(0,jsx_runtime.jsxs)("div",{className:"grid justify-items-center",children:[!isLoaded&&(0,jsx_runtime.jsxs)("div",{className:"place-items-center mt-16",children:[(0,jsx_runtime.jsx)("div",{className:"place-self-center text-center",children:"Loading..."}),(0,jsx_runtime.jsx)("br",{}),(0,jsx_runtime.jsx)("progress",{className:"progress progress-primary w-56"})]}),!isConnected&&(0,jsx_runtime.jsx)("div",{className:"place-items-center mt-16",children:(0,jsx_runtime.jsx)("div",{className:"place-self-center text-center text-2xl",children:(0,jsx_runtime.jsx)("button",{className:"btn btn-primary",onClick:openConnectModal,children:"Connect Wallet"})})}),0===valiArray.length&&isLoaded&&isConnected&&(0,jsx_runtime.jsx)("div",{className:"place-items-center mt-16",children:(0,jsx_runtime.jsx)("div",{className:"place-self-center text-center text-2xl",children:"No staked ETH positions yet!"})}),isLoaded&&isConnected&&0!==valiArray.length&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsxs)("div",{className:"text-2xl font-bold mt-6",children:["Your staked ETH positions",(0,jsx_runtime.jsx)("div",{className:"tooltip tooltip-primary","data-tip":"activate advanced options",children:(0,jsx_runtime.jsx)("label",{htmlFor:"advanced",className:"btn btn-ghost btn-xs btn-circle text-lg no-animation btn-link modal-button",children:"⚙"})})]}),(0,jsx_runtime.jsx)("div",{className:"flex flex-col w-full lg:flex-row mt-1 lg:mt-6",children:metaArray.map((item,index)=>{var ref,ref1,ref2,ref3,ref4;return(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{className:"divider lg:divider-horizontal"}),(0,jsx_runtime.jsxs)("div",{className:"grid flex-grow card glass bg-base-300 rounded-box place-items-center lg:m-0 ml-20 mr-20",children:[(0,jsx_runtime.jsxs)("h1",{className:"card-title mb-2 mt-1 text-2xl",children:[null===(ref=valiArray[index])||void 0===ref?void 0:ref.name," ",(null===(ref1=valiArray[index])||void 0===ref1?void 0:ref1.verified)?"verified":"not verified"]}),(0,jsx_runtime.jsx)("img",{src:item.image,width:"80%",height:"40%"}),(0,jsx_runtime.jsxs)("div",{className:"card-body grid grid-cols-2",children:[(0,jsx_runtime.jsx)("div",{children:"Location"}),(0,jsx_runtime.jsx)("div",{className:"text-right",children:null===(ref2=valiArray[index])||void 0===ref2?void 0:ref2.location}),(0,jsx_runtime.jsxs)("div",{children:["Execution Client"," ",(0,jsx_runtime.jsx)("div",{className:"tooltip tooltip-primary tooltip-right","data-tip":"info",children:"ⓘ"})]}),(0,jsx_runtime.jsx)("div",{className:"text-right",children:(null===(ref3=valiArray[index])||void 0===ref3?void 0:ref3.executionLayerClients)||"no data"}),(0,jsx_runtime.jsxs)("div",{children:["Consenus Client"," ",(0,jsx_runtime.jsx)("div",{className:"tooltip tooltip-primary tooltip-right","data-tip":"info",children:"ⓘ"})]}),(0,jsx_runtime.jsx)("div",{className:"text-right",children:(null===(ref4=valiArray[index])||void 0===ref4?void 0:ref4.consensusLayerClients)||"no data"})]}),(0,jsx_runtime.jsx)("div",{className:"mb-2 link-primary link-hover",children:(0,jsx_runtime.jsx)(link_default(),{href:beaconchain+pubKeysArray[index],children:"Validator details \uD83D\uDD17"})})]}),(0,jsx_runtime.jsx)("div",{className:"divider lg:divider-horizontal "})]})})}),apeMode&&(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)("div",{className:"text-2xl font-bold mt-10",children:"Withdraw & Deposit swETH"}),(0,jsx_runtime.jsx)("div",{className:"card glass mt-2",children:(0,jsx_runtime.jsxs)("div",{className:"card-body",children:[(0,jsx_runtime.jsx)("select",{className:"select select-primary select-sm",title:"Select swNFT"}),(0,jsx_runtime.jsx)("input",{className:"input input-primary input-sm",placeholder:"Enter swETH Amount"}),(0,jsx_runtime.jsx)("button",{className:"btn btn-primary btn-xs",children:"Withdraw swETH"}),(0,jsx_runtime.jsx)("button",{className:"btn btn-primary btn-xs",children:"Deposit swETH"})]})})]})]}),(0,jsx_runtime.jsx)("input",{type:"checkbox",id:"advanced",className:"modal-toggle"}),(0,jsx_runtime.jsx)("div",{className:"modal",children:(0,jsx_runtime.jsxs)("div",{className:"modal-box relative",children:[(0,jsx_runtime.jsx)("label",{htmlFor:"advanced",className:"btn btn-sm btn-circle absolute right-2 top-2",children:"✕"}),(0,jsx_runtime.jsx)("h3",{className:"text-lg font-bold",children:"Activate Advanced Mode"}),(0,jsx_runtime.jsx)("p",{className:"py-4",children:"Are you sure you want to activate advanced options? This will allow to withdraw your staked swETH and use it in the broader DeFi ecosystem."}),(0,jsx_runtime.jsxs)("div",{className:"modal-action",children:[(0,jsx_runtime.jsx)("label",{htmlFor:"advanced",className:"btn",children:"Abort"}),(0,jsx_runtime.jsx)("label",{htmlFor:"advanced",className:"btn btn-primary",onClick:()=>setapeMode(!0),children:"Confirm"})]})]})})]})})};var rewards=Account}},function(__webpack_require__){__webpack_require__.O(0,[8764,9669,1820,9774,2888,179],function(){return __webpack_require__(__webpack_require__.s=62197)}),_N_E=__webpack_require__.O()}]);