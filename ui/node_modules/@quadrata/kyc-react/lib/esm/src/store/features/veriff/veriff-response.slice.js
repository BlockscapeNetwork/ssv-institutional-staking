var _a;
import { createSlice } from '@reduxjs/toolkit';
export var VeriffStatus;
(function (VeriffStatus) {
    VeriffStatus[VeriffStatus["PENDING"] = 0] = "PENDING";
    VeriffStatus[VeriffStatus["STARTED"] = 1] = "STARTED";
    VeriffStatus[VeriffStatus["CANCELED"] = 2] = "CANCELED";
    VeriffStatus[VeriffStatus["FINISHED"] = 3] = "FINISHED";
})(VeriffStatus || (VeriffStatus = {}));
var generateInitialState = function () { return ({
    status: VeriffStatus.PENDING,
    veriffFrame: null,
}); };
export var slice = createSlice({
    name: 'VeriffResponseSlice',
    initialState: generateInitialState(),
    reducers: {
        updateVeriffStatus: function (state, action) {
            state.status = action.payload;
        },
        clearVeriffStatus: function (state) {
            state.status = VeriffStatus.PENDING;
        },
        setVeriffFrame: function (state, action) {
            state.veriffFrame = action.payload;
        },
        reset: function (state) {
            state = generateInitialState();
            return state;
        },
    },
});
export var updateVeriffStatus = (_a = slice.actions, _a.updateVeriffStatus), clearVeriffStatus = _a.clearVeriffStatus, setVeriffFrame = _a.setVeriffFrame, reset = _a.reset;
export default slice.reducer;
