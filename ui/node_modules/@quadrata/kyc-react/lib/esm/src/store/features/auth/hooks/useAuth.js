import { useCallback, useMemo } from 'react';
import { useAppDispatch, useAppSelector } from '../../../store';
import { setAuth as set, reset } from '../auth.slice';
export var useAuth = function () {
    var dispatch = useAppDispatch();
    var _a = useAppSelector(function (state) { return state.auth; }), jwt = _a.jwt, account = _a.account, customerId = _a.customerId;
    var setAuth = useCallback(function (jwt) {
        dispatch(set(jwt));
    }, [dispatch]);
    var resetAuth = useCallback(function () {
        dispatch(reset());
    }, [dispatch]);
    return useMemo(function () {
        return {
            jwt: jwt,
            account: account,
            setAuth: setAuth,
            resetAuth: resetAuth,
            customerId: customerId,
        };
    }, [jwt, account, customerId, setAuth]);
};
