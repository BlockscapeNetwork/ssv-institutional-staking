var _a;
import { createSlice } from '@reduxjs/toolkit';
var generateInitialState = function () { return ({
    governanceAddress: '',
    contractAddress: '',
    country: '',
    aml: '',
    did: '',
    signature: '',
    issuedAt: 0,
    tokenId: 0,
    txHash: '',
    isBusiness: false,
}); };
export var slice = createSlice({
    name: 'EthereumContractSlice',
    initialState: generateInitialState(),
    reducers: {
        setEthereumContract: function (state, action) {
            state.governanceAddress = action.payload.governanceAddress;
            state.contractAddress = action.payload.contractAddress;
            state.country = action.payload.country;
            state.aml = action.payload.aml;
            state.did = action.payload.did;
            state.signature = action.payload.signature;
            state.issuedAt = action.payload.issuedAt;
            state.tokenId = action.payload.tokenId;
            state.isBusiness = !!action.payload.isBusiness;
        },
        clearEthereumContract: function (state) {
            state.contractAddress = '';
            state.country = '';
            state.aml = '';
            state.did = '';
            state.signature = '';
            state.issuedAt = 0;
            state.tokenId = 0;
            state.txHash = '';
            state.isBusiness = false;
        },
        setTxHash: function (state, action) {
            state.txHash = action.payload;
        },
        reset: function (state) {
            state = generateInitialState();
            return state;
        },
    },
});
export var setEthereumContract = (_a = slice.actions, _a.setEthereumContract), clearEthereumContract = _a.clearEthereumContract, setTxHash = _a.setTxHash, reset = _a.reset;
export default slice.reducer;
