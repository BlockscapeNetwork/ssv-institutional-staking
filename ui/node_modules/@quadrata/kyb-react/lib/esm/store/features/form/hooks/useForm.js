import { useCallback, useMemo } from 'react';
import { useAppDispatch, useAppSelector } from '../../../store';
import { setFile, setField, reset } from '../form.slice';
export var useForm = function () {
    var dispatch = useAppDispatch();
    var _a = useAppSelector(function (state) { return state.form; }), fields = _a.fields, files = _a.files;
    var setFormField = useCallback(function (_a) {
        var key = _a.key, value = _a.value;
        dispatch(setField({ key: key, value: value }));
    }, [dispatch]);
    var setFormFile = useCallback(function (_a) {
        var key = _a.key, value = _a.value;
        dispatch(setFile({ key: key, value: value }));
    }, [dispatch]);
    var resetForm = useCallback(function () {
        dispatch(reset());
    }, [dispatch]);
    return useMemo(function () {
        return {
            files: files,
            fields: fields,
            resetForm: resetForm,
            setFormFile: setFormFile,
            setFormField: setFormField,
        };
    }, [files, fields, resetForm, setFormFile, setFormField]);
};
