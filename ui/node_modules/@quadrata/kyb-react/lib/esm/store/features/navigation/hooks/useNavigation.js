import { useCallback, useMemo } from 'react';
import { useAppDispatch, useAppSelector } from '../../../store';
import { setPage, reset } from '../navigation.slice';
import { useSettings } from '../../settings/hooks/useSettings';
export var useNavigation = function () {
    var dispatch = useAppDispatch();
    var page = useAppSelector(function (state) { return state.navigation; }).page;
    var debug = useSettings().debug;
    var navigate = useCallback(function (page) {
        debug && console.log('Navigating to page: ', page);
        dispatch(setPage(page));
    }, [debug, dispatch]);
    var resetNavigation = useCallback(function () {
        dispatch(reset());
    }, [dispatch]);
    return useMemo(function () {
        return {
            page: page,
            navigate: navigate,
            resetNavigation: resetNavigation,
        };
    }, [page, navigate, resetNavigation]);
};
