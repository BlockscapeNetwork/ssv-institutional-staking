import { TypedUseSelectorHook } from 'react-redux';
export declare const store: import("@reduxjs/toolkit").EnhancedStore<{
    form: {
        fields: {
            BUSINESS_NAME: string;
            EMAIL: string;
            BUSINESS_PHONE: string;
            BUSINESS_WEBSITE_URLS: string;
            COMPANY_LEGAL_NAME: string;
            COMPANY_DBA: string;
            COMPANY_FORMATION_DATE: string;
            BUSINESS_DESCRIPTION: string;
            JURISDICTION_OF_FORMATION: string;
            PRINCIPAL_PLACE_OF_BUSINESS: string;
            COUNTRIES_OF_BUSINESS_ACTIVITY: string;
            BUSINESS_TAX_ID: string;
            BUSINESS_REGISTRATION_NUMBER: string;
            BUSINESS_NAICS_CODE: string;
            BENEFICIAL_OWNERS: string;
            CONTROLLING_PERSON_LEGAL_NAME: string;
            CONTROLLING_PERSON_TITLE: string;
            CONTROLLING_PERSON_EMAIL: string;
            WALLET_ADDRESSES: string;
            TEST_WALLET_ADDRESSES: string;
            SIGNATURE: string;
        };
        files: {
            CERTIFICATE_OF_INCORPORATION: import("./features/form/form.slice").FormFile | undefined;
            BYLAWS: import("./features/form/form.slice").FormFile | undefined;
            KYC_AML_PROGRAM: import("./features/form/form.slice").FormFile | undefined;
            AUTHORIZED_SIGNATORY_LIST: import("./features/form/form.slice").FormFile | undefined;
            BANK_VERIFICATION: import("./features/form/form.slice").FormFile | undefined;
            FORM_FIELDS: import("./features/form/form.slice").FormFile | undefined;
        };
    };
    settings: {
        debug: boolean;
    };
    navigation: {
        page: import("./features/navigation/navigation.slice").PageKyb;
        error: boolean;
    };
}, import("redux").AnyAction, [import("redux-thunk").ThunkMiddleware<{
    form: {
        fields: {
            BUSINESS_NAME: string;
            EMAIL: string;
            BUSINESS_PHONE: string;
            BUSINESS_WEBSITE_URLS: string;
            COMPANY_LEGAL_NAME: string;
            COMPANY_DBA: string;
            COMPANY_FORMATION_DATE: string;
            BUSINESS_DESCRIPTION: string;
            JURISDICTION_OF_FORMATION: string;
            PRINCIPAL_PLACE_OF_BUSINESS: string;
            COUNTRIES_OF_BUSINESS_ACTIVITY: string;
            BUSINESS_TAX_ID: string;
            BUSINESS_REGISTRATION_NUMBER: string;
            BUSINESS_NAICS_CODE: string;
            BENEFICIAL_OWNERS: string;
            CONTROLLING_PERSON_LEGAL_NAME: string;
            CONTROLLING_PERSON_TITLE: string;
            CONTROLLING_PERSON_EMAIL: string;
            WALLET_ADDRESSES: string;
            TEST_WALLET_ADDRESSES: string;
            SIGNATURE: string;
        };
        files: {
            CERTIFICATE_OF_INCORPORATION: import("./features/form/form.slice").FormFile | undefined;
            BYLAWS: import("./features/form/form.slice").FormFile | undefined;
            KYC_AML_PROGRAM: import("./features/form/form.slice").FormFile | undefined;
            AUTHORIZED_SIGNATORY_LIST: import("./features/form/form.slice").FormFile | undefined;
            BANK_VERIFICATION: import("./features/form/form.slice").FormFile | undefined;
            FORM_FIELDS: import("./features/form/form.slice").FormFile | undefined;
        };
    };
    settings: {
        debug: boolean;
    };
    navigation: {
        page: import("./features/navigation/navigation.slice").PageKyb;
        error: boolean;
    };
}, import("redux").AnyAction, undefined>]>;
export declare type RootState = ReturnType<typeof store.getState>;
export declare type AppDispatch = typeof store.dispatch;
export declare const useAppDispatch: () => AppDispatch;
export declare const useAppSelector: TypedUseSelectorHook<RootState>;
