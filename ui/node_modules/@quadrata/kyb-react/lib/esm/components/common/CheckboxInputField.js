var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Input, Label } from '../Typography';
import { extend } from '../../utils';
export var CheckboxInputField = function (_a) {
    var id = _a.id, value = _a.value, children = _a.children, onChange = _a.onChange, extendedClassName = _a.extendedClassName;
    var handleChange = function (event) {
        var checked = event.currentTarget.checked;
        onChange({ id: id, value: checked });
    };
    return (_jsxs("div", __assign({ className: extend('quad-input-checkbox-container', extendedClassName) }, { children: [_jsx(Input, { id: id, name: id, type: "checkbox", checked: value, onChange: handleChange, extendedClassName: "checkbox" }), _jsx(Label, __assign({ htmlFor: id, extendedClassName: "checkbox" }, { children: children }))] })));
};
