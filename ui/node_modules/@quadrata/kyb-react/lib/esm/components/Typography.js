var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { extend } from '../utils';
export var Section = function (_a) {
    var children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["children", "extendedClassName"]);
    return (_jsx("section", __assign({}, props, { className: extend('quad-section', extendedClassName) }, { children: children })));
};
export var FieldContainer = function (_a) {
    var children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["children", "extendedClassName"]);
    return (_jsx("div", __assign({}, props, { className: extend('quad-field-container', extendedClassName) }, { children: children })));
};
export var FieldLabel = function (_a) {
    var error = _a.error, label = _a.label, children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["error", "label", "children", "extendedClassName"]);
    return (_jsxs("div", __assign({}, props, { className: extend('quad-field-label', extendedClassName) }, { children: [_jsx(Label, __assign({ extendedClassName: extendedClassName }, { children: label })), _jsx(ErrorMessage, { extendedClassName: extendedClassName, error: error })] })));
};
export var Label = function (_a) {
    var children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["children", "extendedClassName"]);
    return (_jsx("label", __assign({}, props, { className: extend('quad-label', extendedClassName) }, { children: children })));
};
export var ErrorMessage = function (_a) {
    var error = _a.error, extendedClassName = _a.extendedClassName, props = __rest(_a, ["error", "extendedClassName"]);
    return (_jsx("div", __assign({ className: extend('quad-error-message-container', extendedClassName) }, props, { children: !!error && _jsx("span", __assign({ className: extend('quad-error-message', extendedClassName) }, { children: error })) })));
};
export var Select = function (_a) {
    var children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["children", "extendedClassName"]);
    return (_jsx("select", __assign({}, props, { className: extend('quad-select', extendedClassName) }, { children: children })));
};
export var Option = function (_a) {
    var children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["children", "extendedClassName"]);
    return (_jsx("option", __assign({}, props, { className: extend('quad-option', extendedClassName) }, { children: children })));
};
export var Small = function (_a) {
    var children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["children", "extendedClassName"]);
    return (_jsx("small", __assign({}, props, { className: extend('quad-small', extendedClassName) }, { children: children })));
};
export var Input = function (_a) {
    var children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["children", "extendedClassName"]);
    return (_jsx("input", __assign({}, props, { className: extend('quad-input', extendedClassName) }, { children: children })));
};
export var Textarea = function (_a) {
    var children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["children", "extendedClassName"]);
    return (_jsx("textarea", __assign({}, props, { className: extend('quad-textarea', extendedClassName) }, { children: children })));
};
export var Button = function (_a) {
    var primary = _a.primary, toggle = _a.toggle, children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["primary", "toggle", "children", "extendedClassName"]);
    return (_jsx("button", __assign({}, props, { className: "".concat(extend('quad-button', extendedClassName)).concat(primary ? ' quad-button-primary' : '').concat(toggle ? ' quad-button-toggle' : '') }, { children: children })));
};
export var Ul = function (_a) {
    var children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["children", "extendedClassName"]);
    return (_jsx("ul", __assign({}, props, { className: extend('quad-ul', extendedClassName) }, { children: children })));
};
export var A = function (_a) {
    var children = _a.children, extendedClassName = _a.extendedClassName, props = __rest(_a, ["children", "extendedClassName"]);
    return (_jsx("a", __assign({}, props, { target: "_blank", rel: "noreferrer noopener", className: extend('quad-anchor', extendedClassName) }, { children: children })));
};
