var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { createVeriffSession } from '../controllers/api/createVeriffSession.api';
import { useNavigation } from '../store/features/navigation/hooks/useNavigation';
import { Page } from '../store/features/navigation/navigation.slice';
import { PageLayout } from '../components/PageLayout';
import { ContactLinks } from '../components/common/ContactLinks';
export var PageVeriffError = function (_a) {
    var backendUrl = _a.backendUrl;
    var navigate = useNavigation().navigate;
    var onClickTryAgain = function () {
        createVeriffSession(backendUrl).then(function () {
            navigate(Page.VERIFF);
        });
    };
    return (_jsxs(PageLayout, __assign({ "data-id": "page-veriff-error" }, { children: [_jsx("h1", { children: "We could not verify your identity." }), _jsx("section", { children: "Please try again or report your issue using the links below." }), _jsx("section", __assign({ className: "kyc-buttons kyc-buttons-single" }, { children: _jsx("button", __assign({ className: "kyc-button kyc-button-primary", onClick: onClickTryAgain }, { children: "Try again" })) })), _jsx(ContactLinks, {})] })));
};
