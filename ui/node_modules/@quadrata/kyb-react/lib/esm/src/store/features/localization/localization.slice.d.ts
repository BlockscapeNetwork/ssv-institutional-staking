import { PayloadAction } from '@reduxjs/toolkit';
import { Country } from '../../../../utils/address';
export declare const slice: import("@reduxjs/toolkit").Slice<{
    currentCountry: Country;
    allCountries: Country[];
}, {
    updateCurrentCountry: (state: import("immer/dist/internal").WritableDraft<{
        currentCountry: Country;
        allCountries: Country[];
    }>, action: PayloadAction<Country>) => void;
    fetchAllCountries: (state: import("immer/dist/internal").WritableDraft<{
        currentCountry: Country;
        allCountries: Country[];
    }>, action: PayloadAction<Country[]>) => void;
    reset: (state: import("immer/dist/internal").WritableDraft<{
        currentCountry: Country;
        allCountries: Country[];
    }>) => import("immer/dist/internal").WritableDraft<{
        currentCountry: Country;
        allCountries: Country[];
    }>;
}, "LocalizationSlice">;
export declare const updateCurrentCountry: import("@reduxjs/toolkit").ActionCreatorWithPayload<Country, string>, fetchAllCountries: import("@reduxjs/toolkit").ActionCreatorWithPayload<Country[], string>, reset: import("@reduxjs/toolkit").ActionCreatorWithoutPayload<string>;
declare const _default: import("redux").Reducer<{
    currentCountry: Country;
    allCountries: Country[];
}, import("redux").AnyAction>;
export default _default;
