var _a;
import { createSlice } from '@reduxjs/toolkit';
export var KYCFieldType;
(function (KYCFieldType) {
    KYCFieldType["ADDRESS_LINE_1"] = "address1";
    KYCFieldType["ADDRESS_LINE_2"] = "address2";
    KYCFieldType["FIRST_NAME"] = "firstName";
    KYCFieldType["LAST_NAME"] = "lastName";
    KYCFieldType["CITY"] = "city";
    KYCFieldType["PROVINCE"] = "province";
    KYCFieldType["ZIP"] = "zip";
    KYCFieldType["COUNTRY"] = "country";
})(KYCFieldType || (KYCFieldType = {}));
var generateInitialState = function () { return ({
    formFieldTypes: [],
    formValues: {
        address1: '',
        address2: '',
        city: '',
        zip: '',
        province: '',
        firstName: '',
        lastName: '',
    },
    formErrors: {
        address1: '',
        address2: '',
        city: '',
        zip: '',
        province: '',
        firstName: '',
        lastName: '',
    },
    submitting: false,
    submittedSuccessfully: false,
}); };
export var slice = createSlice({
    name: 'KYCFormSlice',
    initialState: generateInitialState(),
    reducers: {
        updateKYCFormFieldTypes: function (state, action) {
            state.formFieldTypes = action.payload;
        },
        updateKYCFormValue: function (state, action) {
            state.formValues[action.payload.type] = action.payload.value;
        },
        multiUpdateKYCForm: function (state, action) {
            state.formValues.address1 = action.payload.address1;
            state.formValues.address2 = action.payload.address2;
            state.formValues.city = action.payload.city;
            state.formValues.zip = action.payload.zip;
            state.formValues.province = action.payload.province;
            state.formValues.firstName = action.payload.firstName;
            state.formValues.lastName = action.payload.lastName;
        },
        clearCountry: function (state) {
            state.formValues.province = '';
            state.formValues.zip = '';
            state.formValues.city = '';
            state.formValues.address1 = '';
            state.formValues.address2 = '';
        },
        submittedSuccessfully: function (state) {
            state.submittedSuccessfully = true;
            state.submitting = false;
        },
        submittingFailed: function (state) {
            state.submittedSuccessfully = false;
            state.submitting = false;
        },
        submitting: function (state) {
            state.submitting = true;
            state.formErrors = {
                address1: '',
                address2: '',
                city: '',
                zip: '',
                province: '',
                firstName: '',
                lastName: '',
            };
        },
        clearKYCFormSlice: function (state) {
            state.submitting = false;
            state.submittedSuccessfully = false;
            state.formValues = {
                address1: '',
                address2: '',
                city: '',
                zip: '',
                province: '',
                firstName: '',
                lastName: '',
            };
        },
        setKYCFormError: function (state, action) {
            state.formErrors[action.payload.type] = action.payload.value;
        },
        reset: function (state) {
            state = generateInitialState();
            return state;
        },
    },
});
export var updateKYCFormFieldTypes = (_a = slice.actions, _a.updateKYCFormFieldTypes), updateKYCFormValue = _a.updateKYCFormValue, multiUpdateKYCForm = _a.multiUpdateKYCForm, clearCountry = _a.clearCountry, submittedSuccessfully = _a.submittedSuccessfully, submitting = _a.submitting, clearKYCFormSlice = _a.clearKYCFormSlice, submittingFailed = _a.submittingFailed, setKYCFormError = _a.setKYCFormError, reset = _a.reset;
export default slice.reducer;
