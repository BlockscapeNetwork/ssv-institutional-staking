var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx } from "react/jsx-runtime";
export var ErrorType;
(function (ErrorType) {
    ErrorType["INSUFFICIENT_FUNDS"] = "INSUFFICIENT_FUNDS";
    ErrorType["OTHER"] = "OTHER";
})(ErrorType || (ErrorType = {}));
export var ErrorMessage = function (_a) {
    var errorType = _a.errorType;
    var generateErrorMessage = function (errorType) {
        switch (errorType) {
            case ErrorType.INSUFFICIENT_FUNDS:
                return 'Insufficient ETH balance';
            case ErrorType.OTHER:
            default:
                return 'Something went wrong';
        }
    };
    return _jsx("div", __assign({ className: "kyc-error-message" }, { children: errorType && generateErrorMessage(errorType) }));
};
