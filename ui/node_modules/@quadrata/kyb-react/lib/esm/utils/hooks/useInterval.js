import { useEffect, useRef } from 'react';
export var useInterval = function (callback, delay) {
    var savedCallback = useRef(function () { });
    // Remember the latest callback
    useEffect(function () {
        savedCallback.current = callback;
    }, [callback]);
    // Set up the interval
    useEffect(function () {
        var tick = function () {
            savedCallback.current();
        };
        if (delay !== null) {
            var id_1 = setInterval(tick, delay);
            return function () {
                clearInterval(id_1);
            };
        }
        return function () { };
    }, [callback, delay]);
};
