var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PageLayout } from '../components/PageLayout';
import { TextInputField, TextInputType } from '../components/common/TextInputField';
import { useNavigation } from '../store/features/navigation/hooks/useNavigation';
import { PageKyb } from '../store/features/navigation/navigation.slice';
import { useForm } from '../store/features/form/hooks/useForm';
import { FormField } from '../store/features/form/form.slice';
import { Button, Section } from '../components/Typography';
import { ButtonsSection } from '../components/ButtonsSection';
export var PageWallets = function () {
    //Hooks
    var navigate = useNavigation().navigate;
    var _a = useForm(), setFormField = _a.setFormField, fields = _a.fields;
    var handleInputChange = function (_a) {
        var id = _a.id, value = _a.value;
        setFormField({ key: id, value: value });
    };
    return (_jsxs(PageLayout, __assign({ page: PageKyb.WALLETS }, { children: [_jsx("h1", { children: "Quadrata Passport Business Application" }), _jsxs(Section, __assign({ extendedClassName: "wallets" }, { children: [_jsx("h2", { children: "Section 4 - Wallets" }), _jsx(TextInputField, { id: FormField.WALLET_ADDRESSES, type: TextInputType.TEXTAREA, label: "Wallet addresses", value: fields[FormField.WALLET_ADDRESSES], onChange: handleInputChange, description: "Please list all of the wallet addresses for which your business wishes to receive an identity passport. Please include the protocol for each address." }), _jsx(TextInputField, { id: FormField.TEST_WALLET_ADDRESSES, type: TextInputType.TEXTAREA, label: "Test wallet addresses", value: fields[FormField.TEST_WALLET_ADDRESSES], onChange: handleInputChange, description: "Please list all of the test wallet addresses for which your business wishes to receive an identity passport. Please include the test protocol for each address." })] })), _jsxs(ButtonsSection, { children: [_jsx(Button, __assign({ primary: true, onClick: function () { return navigate(PageKyb.OWNERSHIP); } }, { children: "Back" })), _jsx(Button, __assign({ onClick: function () { return navigate(PageKyb.DOCUMENTS); } }, { children: "Step 5 - Document Upload" }))] })] })));
};
