var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState } from 'react';
import { PageLayout } from '../components/PageLayout';
import { useNavigation } from '../store/features/navigation/hooks/useNavigation';
import { PageKyb } from '../store/features/navigation/navigation.slice';
import { useForm } from '../store/features/form/hooks/useForm';
import { FormField } from '../store/features/form/form.slice';
import { validateEmail } from '../utils';
import { A, Button, ErrorMessage, Section, Ul } from '../components/Typography';
import { ButtonsSection } from '../components/ButtonsSection';
import { TextInputField, TextInputType } from '../components/common/TextInputField';
export var PageBasicInformation = function () {
    //Hooks
    var navigate = useNavigation().navigate;
    var _a = useForm(), fields = _a.fields, setFormField = _a.setFormField;
    // State
    var _b = useState(false), moreInfo = _b[0], setMoreInfo = _b[1];
    var _c = useState(), error = _c[0], setError = _c[1];
    var handleInputChange = function (_a) {
        var id = _a.id, value = _a.value;
        setFormField({ key: id, value: value });
    };
    var handleNext = function () {
        // Add email regex check
        var valid = validateEmail(fields[FormField.EMAIL]);
        if (!valid) {
            setError('* Valid email address is required');
        }
        else {
            navigate(PageKyb.TAXES);
        }
    };
    return (_jsxs(PageLayout, __assign({ page: PageKyb.BASIC_INFORMATION }, { children: [_jsx("h1", { children: "Quadrata Passport Business Application" }), _jsxs(Section, __assign({ extendedClassName: "business-application-intro" }, { children: [_jsx("p", { children: "Please complete the form below. Not all fields are required to submit for verification. If you don\u2019t have all information, you may return and begin a new session." }), _jsxs("p", { children: ["For questions regarding this form, please contact", ' ', _jsx(A, __assign({ href: "mailto:compliance@springlabs.com" }, { children: "compliance@springlabs.com" }))] })] })), _jsxs(Section, __assign({ extendedClassName: "business-application-required-information" }, { children: [_jsxs(Button, __assign({ toggle: true, onClick: function () { return setMoreInfo(!moreInfo); } }, { children: [moreInfo ? '-' : '+', " List of Required Information"] })), moreInfo && (_jsxs(_Fragment, { children: [_jsx("h3", { children: "Required Information" }), _jsxs(Ul, __assign({ extendedClassName: "required-information" }, { children: [_jsx("li", { children: "Email Address" }), _jsx("li", { children: "Business Phone Number" }), _jsx("li", { children: "Business Website URL (if applicable)" }), _jsx("li", { children: "Company's Legal Name" }), _jsx("li", { children: "Company's DBA (if applicable)" }), _jsx("li", { children: "Company's Date Of Formation" }), _jsx("li", { children: "Business Description" }), _jsx("li", { children: "Jurisdiction Of Formation" }), _jsx("li", { children: "Principal Place Of Business" }), _jsx("li", { children: "Countries Of Business Activity" }), _jsx("li", { children: "Business Tax ID" }), _jsx("li", { children: "Business Registration Number (if applicable)" }), _jsx("li", { children: "Business NAICS Code (if applicable)" }), _jsx("li", { children: "Ultimate Beneficial Owners (if applicable)" }), _jsx("li", { children: "Controlling Person's Legal Name (if applicable)" }), _jsx("li", { children: "Controlling Person's Title (if applicable)" }), _jsx("li", { children: "Controlling Person's Email Address (if applicable)" }), _jsx("li", { children: "Wallet Addresses" }), _jsx("li", { children: "Test Wallet Addresses" })] })), _jsx("h3", { children: "Required Documents" }), _jsxs(Ul, __assign({ extendedClassName: "required-documents" }, { children: [_jsx("li", { children: "Certificate Of Incorporation" }), _jsx("li", { children: "Bylaws" }), _jsx("li", { children: "Document Detailing Company's KYC/AML Program" }), _jsx("li", { children: "Authorized Signatory List" }), _jsx("li", { children: "Bank Verification Document" })] }))] }))] })), _jsxs(Section, __assign({ extendedClassName: "basic-information" }, { children: [_jsx("h2", { children: "Section 1 - Basic Information" }), _jsx(TextInputField, { id: FormField.EMAIL, error: error, type: TextInputType.EMAIL, label: "Email address", value: fields[FormField.EMAIL], onChange: handleInputChange, description: "Email address of the person completing this form" }), _jsx(TextInputField, { id: FormField.BUSINESS_PHONE, type: TextInputType.PHONE, label: "Business phone number", value: fields[FormField.BUSINESS_PHONE], onChange: handleInputChange }), _jsx(TextInputField, { id: FormField.BUSINESS_WEBSITE_URLS, label: "Business website URL (if applicable)", type: TextInputType.TEXTAREA, value: fields[FormField.BUSINESS_WEBSITE_URLS], onChange: handleInputChange, description: "If your business has multiple websites, please list them all" }), _jsx(TextInputField, { id: FormField.COMPANY_LEGAL_NAME, label: "Company's legal name", value: fields[FormField.COMPANY_LEGAL_NAME], onChange: handleInputChange, description: "Must match the name on Certificate of Incorporation or equivalent Formation Document" }), _jsx(TextInputField, { id: FormField.COMPANY_DBA, label: "Company's DBA (if applicable)", value: fields[FormField.COMPANY_DBA], onChange: handleInputChange }), _jsx(TextInputField, { id: FormField.COMPANY_FORMATION_DATE, label: "Company's Date of formation", value: fields[FormField.COMPANY_FORMATION_DATE], onChange: handleInputChange, description: "Must match the company's date of formation on the Certificate of Incorporation or equivalent Formation Document" }), _jsx(TextInputField, { id: FormField.BUSINESS_DESCRIPTION, type: TextInputType.TEXTAREA, label: "Business description", value: fields[FormField.BUSINESS_DESCRIPTION], onChange: handleInputChange, description: "Please describe your company\u2019s business activities in detail" })] })), _jsxs(ButtonsSection, { children: [_jsx(Button, __assign({ onClick: function () { return navigate(PageKyb.INTRO); } }, { children: "Back" })), _jsx(Button, __assign({ primary: true, onClick: handleNext }, { children: "Step 2 - Jurisdiction And Taxes" }))] }), _jsx(ErrorMessage, { error: error })] })));
};
