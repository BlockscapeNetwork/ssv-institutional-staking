var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PageLayout } from '../components/PageLayout';
import { TextInputField, TextInputType } from '../components/common/TextInputField';
import { useNavigation } from '../store/features/navigation/hooks/useNavigation';
import { PageKyb } from '../store/features/navigation/navigation.slice';
import { useForm } from '../store/features/form/hooks/useForm';
import { FormField } from '../store/features/form/form.slice';
import { Button, Section } from '../components/Typography';
import { ButtonsSection } from '../components/ButtonsSection';
export var PageTaxes = function () {
    //Hooks
    var navigate = useNavigation().navigate;
    var _a = useForm(), setFormField = _a.setFormField, fields = _a.fields;
    var handleInputChange = function (_a) {
        var id = _a.id, value = _a.value;
        setFormField({ key: id, value: value });
    };
    return (_jsxs(PageLayout, __assign({ page: PageKyb.TAXES }, { children: [_jsx("h1", { children: "Quadrata Passport Business Application" }), _jsxs(Section, __assign({ extendedClassName: "taxes" }, { children: [_jsx("h2", { children: "Section 2 - Jurisdiction and Taxes" }), _jsx(TextInputField, { id: FormField.JURISDICTION_OF_FORMATION, label: "Jurisdiction of formation", value: fields[FormField.JURISDICTION_OF_FORMATION], onChange: handleInputChange }), _jsx(TextInputField, { id: FormField.PRINCIPAL_PLACE_OF_BUSINESS, label: "Principal place of business", value: fields[FormField.PRINCIPAL_PLACE_OF_BUSINESS], onChange: handleInputChange, description: "Please provide the address from which the company physically conducts its business" }), _jsx(TextInputField, { id: FormField.COUNTRIES_OF_BUSINESS_ACTIVITY, type: TextInputType.TEXTAREA, label: "Countries of business activity", value: fields[FormField.COUNTRIES_OF_BUSINESS_ACTIVITY], onChange: handleInputChange, description: "Please list all of the countries in which your company does business" }), _jsx(TextInputField, { id: FormField.BUSINESS_TAX_ID, label: "Business tax ID", value: fields[FormField.BUSINESS_TAX_ID], onChange: handleInputChange, description: "EIN, VAT-ID, etc." }), _jsx(TextInputField, { id: FormField.BUSINESS_REGISTRATION_NUMBER, label: "Business registration number (if applicable)", value: fields[FormField.BUSINESS_REGISTRATION_NUMBER], onChange: handleInputChange }), _jsx(TextInputField, { id: FormField.BUSINESS_NAICS_CODE, label: "Business NAICS code (if applicable)", value: fields[FormField.BUSINESS_NAICS_CODE], onChange: handleInputChange, description: "For US businesses only" })] })), _jsxs(ButtonsSection, { children: [_jsx(Button, __assign({ onClick: function () { return navigate(PageKyb.BASIC_INFORMATION); } }, { children: "Back" })), _jsx(Button, __assign({ primary: true, onClick: function () { return navigate(PageKyb.OWNERSHIP); } }, { children: "Step 3 - Ownership and Control" }))] })] })));
};
