var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { PageLayout } from '../components/PageLayout';
import { TextInputField } from '../components/common/TextInputField';
import { useNavigation } from '../store/features/navigation/hooks/useNavigation';
import { PageKyb } from '../store/features/navigation/navigation.slice';
import { useForm } from '../store/features/form/hooks/useForm';
import { FormField } from '../store/features/form/form.slice';
import { QuadrataLogo } from '../components/svg/QuadrataLogo';
import { SpringlabsLogo } from '../components/svg/SpringlabsLogo';
import { Button, FieldContainer, Option, Section, Select, Small } from '../components/Typography';
import { ButtonsSection } from '../components/ButtonsSection';
export var PageIntro = function () {
    //Hooks
    var navigate = useNavigation().navigate;
    var _a = useForm(), fields = _a.fields, setFormField = _a.setFormField;
    // State
    var _b = useState(), error = _b[0], setError = _b[1];
    var handleInputChange = function (_a) {
        var id = _a.id, value = _a.value;
        setFormField({ key: id, value: value });
    };
    var handleNext = function () {
        if (!fields[FormField.BUSINESS_NAME]) {
            setError('* Business name is required');
        }
        else {
            navigate(PageKyb.BASIC_INFORMATION);
        }
    };
    return (_jsxs(PageLayout, __assign({ page: PageKyb.INTRO }, { children: [_jsx("h1", { children: "Quadrata Passport" }), _jsx(Section, __assign({ extendedClassName: "quadrata-logo" }, { children: _jsx(QuadrataLogo, {}) })), _jsxs(Section, __assign({ extendedClassName: "intro" }, { children: [_jsx("p", { children: "This protocol uses the Quadrata Passport Network for identity and compliance. The Quadrata Passport is a secure, on-chain identity and compliance solution. No Personal Identifiable Information (PII) is stored on-chain." }), _jsx("p", { children: "The Quadrata Passport utilizes third-party Issuers to Know-Your-Customer (KYC) and verify business information." }), _jsxs("p", { children: ["To learn more about the Quadrata Passport, please visit", ' ', _jsx("a", __assign({ href: "https://quadrata.com", target: "_blank" }, { children: "quadrata.com" })), "."] })] })), _jsx("h2", { children: "Select Your Issuer" }), _jsxs(Section, __assign({ extendedClassName: "issuer" }, { children: [_jsxs(FieldContainer, __assign({ extendedClassName: "issuer" }, { children: [_jsx(SpringlabsLogo, {}), _jsx(Select, __assign({ extendedClassName: "issuer" }, { children: _jsx(Option, __assign({ extendedClassName: "issuer" }, { children: "Spring Labs" })) }))] })), _jsx(Small, __assign({ extendedClassName: "issuer" }, { children: "* No other issuers currently available" }))] })), _jsx(Section, __assign({ className: "business-name" }, { children: _jsx(TextInputField, { id: FormField.BUSINESS_NAME, label: "Business Name", error: error, value: fields[FormField.BUSINESS_NAME], onChange: handleInputChange }) })), _jsx(ButtonsSection, __assign({ single: true }, { children: _jsx(Button, __assign({ primary: true, onClick: handleNext }, { children: "Begin Application" })) }))] })));
};
