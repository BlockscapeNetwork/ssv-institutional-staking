var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { PageLayout } from '../components/PageLayout';
import { ContactLinks } from '../components/common/ContactLinks';
import { SpringlabsLogo } from '../components/svg/SpringlabsLogo';
import { PageKyb } from '../store/features/navigation/navigation.slice';
import { Section } from '../components/Typography';
export var PageComplete = function (_a) {
    var discordUrl = _a.discordUrl, contactEmail = _a.contactEmail;
    return (_jsxs(PageLayout, __assign({ page: PageKyb.COMPLETE }, { children: [_jsx("h1", { children: "Business Application Submitted" }), _jsxs(Section, __assign({ extendedClassName: "complete-issuer" }, { children: [_jsx(SpringlabsLogo, {}), _jsx("h3", { children: "Spring Labs" })] })), _jsx(Section, __assign({ extendedClassName: "complete" }, { children: _jsxs("p", { children: ["You will receive an email from", ' ', _jsx("a", __assign({ href: "mailto:compliance@springlabs.com" }, { children: "compliance@springlabs.com" })), " within 3 business days with any instructions for next steps. If you have any questions, please use the channels below."] }) })), _jsx(ContactLinks, { discordUrl: discordUrl, contactEmail: contactEmail })] })));
};
