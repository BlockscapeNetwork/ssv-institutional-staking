var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from 'react';
import { PageLayout } from '../components/PageLayout';
import { useNavigation } from '../store/features/navigation/hooks/useNavigation';
import { PageKyb } from '../store/features/navigation/navigation.slice';
import { TextInputField } from '../components/common/TextInputField';
import { FormField } from '../store/features/form/form.slice';
import { useForm } from '../store/features/form/hooks/useForm';
import { A, Button, Input, Label, Section } from '../components/Typography';
import { ButtonsSection } from '../components/ButtonsSection';
export var PageTos = function () {
    // State
    var _a = useState(false), agree = _a[0], setAgree = _a[1];
    var _b = useState(), error = _b[0], setError = _b[1];
    // Hooks
    var navigate = useNavigation().navigate;
    var _c = useForm(), setFormField = _c.setFormField, fields = _c.fields;
    // Handlers
    var handleTosCheckboxClick = function (event) {
        var checked = event.target.checked;
        setAgree(checked);
    };
    var handleInputChange = function (_a) {
        var id = _a.id, value = _a.value;
        setFormField({ key: id, value: value });
    };
    var handleSubmit = function () {
        // Add email regex check
        var valid = fields[FormField.SIGNATURE];
        if (!valid) {
            setError('* Electronic signature required');
        }
        else {
            navigate(PageKyb.UPLOAD);
        }
    };
    return (_jsxs(PageLayout, __assign({ page: PageKyb.TOS }, { children: [_jsx("h1", { children: "Quadrata Passport Business Application" }), _jsxs(Section, __assign({ extendedClassName: "tos" }, { children: [_jsx("h2", { children: "Terms of Service & Electronic Signature" }), _jsx("p", { children: "In order for Spring Labs to conduct KYB and mint passports on behalf of your business, you must agree to the terms of service by electronically signing the document linked below." }), _jsxs("p", { children: ["Consent to Terms of Service By selecting the \"Acknowledged and Agreed\" box below, you represent that you have reviewed and agree to the", ' ', _jsx(A, __assign({ href: "https://static1.squarespace.com/static/5d2c272963822b0001f1d878/t/630663629c88f60f22a65b9a/1661363042422/KYBExternal_TOS_06222022.pdf" }, { children: "Terms of Service" })), ' ', "that you are authorized to agree to the Terms of Service on behalf of the business; that all the information provided in this form is current, complete, and accurate; and that you hereby authorize Spring Labs to perform our KY process for the purpose of determining your eligibility to participate in the Quadrata Network."] }), _jsxs("p", { children: ["Quadrata does not maintain or otherwise act as custodian for information provided in connection with your application. Information provided to Quadrata will be forwarded to Spring Labs for their review and thereafter removed from our systems. The Quadrata Privacy Policy can be found at the following link ", _jsx(A, __assign({ href: "https://quadrata.com/privacy" }, { children: "https://quadrata.com/privacy" })), ". Please refer to the Spring Labs Privacy Policy for information regarding the use and custody of your information."] })] })), _jsxs(Section, __assign({ extendedClassName: "tos-agree" }, { children: [_jsx(Input, { id: "kybAgreeTosCheckbox", name: "agree", type: "checkbox", checked: agree, onChange: handleTosCheckboxClick, extendedClassName: "checkbox" }), _jsx(Label, __assign({ htmlFor: "kybAgreeTosCheckbox", extendedClassName: "checkbox" }, { children: "By selecting this box, I accept and agree to the Terms of Service and the representations listed above." }))] })), _jsx(Section, __assign({ extendedClassName: "tos-signature" }, { children: _jsx(TextInputField, { id: FormField.SIGNATURE, label: "Electronic signature", error: error, value: fields[FormField.SIGNATURE], onChange: handleInputChange, description: "By typing my full legal name above, I hereby acknowledge that the information to be submitted is accurate and true, I accept and agree to the Terms of Service and the representations listed above." }) })), _jsxs(ButtonsSection, { children: [_jsx(Button, __assign({ onClick: function () { return navigate(PageKyb.DOCUMENTS); } }, { children: "Back" })), _jsx(Button, __assign({ primary: true, onClick: handleSubmit, disabled: !agree }, { children: "Submit Application" }))] })] })));
};
