var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useEffect, useState } from 'react';
import { PageLayout } from '../components/PageLayout';
import { Loader } from '../components/common/Loader';
import { useForm } from '../store/features/form/hooks/useForm';
import { submitKYBForm } from '../api/api';
import { useNavigation } from '../store/features/navigation/hooks/useNavigation';
import { PageKyb } from '../store/features/navigation/navigation.slice';
import { generateApplicationId } from '../utils';
import { Section } from '../components/Typography';
import { useSettings } from '../store/features/settings/hooks/useSettings';
export var PageUpload = function (_a) {
    var kybId = _a.kybId, children = _a.children, backendUrl = _a.backendUrl, _unsafeForcePage = _a._unsafeForcePage;
    // Hooks
    var navigate = useNavigation().navigate;
    var _b = useForm(), files = _b.files, fields = _b.fields;
    var debug = useSettings().debug;
    // State
    var _c = useState(), applicationId = _c[0], setApplicationId = _c[1];
    // Generating unique applicationId
    useEffect(function () {
        // Generating unique application ID.
        var aId = generateApplicationId();
        setApplicationId(aId);
        debug && console.log('applicationId set to: ', aId);
    }, []);
    // Trying to upload files on initial render if exists
    useEffect(function () {
        if (applicationId && !_unsafeForcePage) {
            submitKYBForm({
                files: files,
                fields: fields,
                kybId: kybId,
                backendUrl: backendUrl,
                applicationId: applicationId,
            })
                .then(function () {
                navigate(PageKyb.COMPLETE);
            })
                .catch(function (e) {
                debug && console.error('KYB form submission error: ', e);
                navigate(PageKyb.ERROR);
            });
        }
    }, [applicationId, _unsafeForcePage, debug]);
    return (_jsxs(PageLayout, __assign({ page: PageKyb.UPLOAD }, { children: [_jsx("h1", { children: "Submitting Application" }), _jsx(Loader, { children: children }), _jsx(Section, __assign({ extendedClassName: "upload" }, { children: _jsx("p", { children: "Your application documents are uploading. This may take several minutes. Please do not close this window until uploading is complete." }) }))] })));
};
